name: Build and Test

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv pip install pytest pytest-asyncio
        uv pip install -e .
    
    - name: Run tests
      run: |
        pytest
    
    - name: Set version from git tag
      id: set-version
      run: |
        # If this is a tag push, use the tag name without leading 'v'
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # For non-tag pushes, use the package version from pyproject.toml
          VERSION=$(grep "version" pyproject.toml | head -1 | cut -d'"' -f2)
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Build package
      run: |
        uv build
    
    - name: Verify uvx install
      run: |
        uv pip install uvx
        uvx nova-act-mcp@${{ steps.set-version.outputs.version }} --version || uvx nova-act-mcp --version

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        if-no-files-found: error

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    # Add environment for protection rules (optional but recommended)
    environment: pypi 
    # Add permissions for OIDC token
    permissions:
      id-token: write # Required for trusted publishing

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Publish to PyPI using Trusted Publishing
      run: |
        uv publish